ARM GAS  /tmp/ccSLks5w.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"usart.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
  18              		.align	1
  19              		.global	MX_USART1_UART_Init
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	MX_USART1_UART_Init:
  25              	.LFB68:
  26              		.file 1 "Core/Src/usart.c"
   1:Core/Src/usart.c **** /* USER CODE BEGIN Header */
   2:Core/Src/usart.c **** /**
   3:Core/Src/usart.c ****  ******************************************************************************
   4:Core/Src/usart.c ****  * @file    usart.c
   5:Core/Src/usart.c ****  * @brief   This file provides code for the configuration
   6:Core/Src/usart.c ****  *          of the USART instances.
   7:Core/Src/usart.c ****  ******************************************************************************
   8:Core/Src/usart.c ****  * @attention
   9:Core/Src/usart.c ****  *
  10:Core/Src/usart.c ****  * Copyright (c) 2022 STMicroelectronics.
  11:Core/Src/usart.c ****  * All rights reserved.
  12:Core/Src/usart.c ****  *
  13:Core/Src/usart.c ****  * This software is licensed under terms that can be found in the LICENSE file
  14:Core/Src/usart.c ****  * in the root directory of this software component.
  15:Core/Src/usart.c ****  * If no LICENSE file comes with this software, it is provided AS-IS.
  16:Core/Src/usart.c ****  *
  17:Core/Src/usart.c ****  ******************************************************************************
  18:Core/Src/usart.c ****  */
  19:Core/Src/usart.c **** /* USER CODE END Header */
  20:Core/Src/usart.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/usart.c **** #include "usart.h"
  22:Core/Src/usart.c **** 
  23:Core/Src/usart.c **** /* USER CODE BEGIN 0 */
  24:Core/Src/usart.c **** 
  25:Core/Src/usart.c **** /* USER CODE END 0 */
  26:Core/Src/usart.c **** 
  27:Core/Src/usart.c **** UART_HandleTypeDef huart1;
  28:Core/Src/usart.c **** 
  29:Core/Src/usart.c **** /* USART1 init function */
  30:Core/Src/usart.c **** 
  31:Core/Src/usart.c **** void MX_USART1_UART_Init(void)
  32:Core/Src/usart.c **** {
ARM GAS  /tmp/ccSLks5w.s 			page 2


  27              		.loc 1 32 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 08B5     		push	{r3, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 3, -8
  35              		.cfi_offset 14, -4
  33:Core/Src/usart.c **** 
  34:Core/Src/usart.c ****     /* USER CODE BEGIN USART1_Init 0 */
  35:Core/Src/usart.c **** 
  36:Core/Src/usart.c ****     /* USER CODE END USART1_Init 0 */
  37:Core/Src/usart.c **** 
  38:Core/Src/usart.c ****     /* USER CODE BEGIN USART1_Init 1 */
  39:Core/Src/usart.c **** 
  40:Core/Src/usart.c ****     /* USER CODE END USART1_Init 1 */
  41:Core/Src/usart.c ****     huart1.Instance = USART1;
  36              		.loc 1 41 5 view .LVU1
  37              		.loc 1 41 21 is_stmt 0 view .LVU2
  38 0002 0A48     		ldr	r0, .L5
  39 0004 0A4B     		ldr	r3, .L5+4
  40 0006 0360     		str	r3, [r0]
  42:Core/Src/usart.c ****     huart1.Init.BaudRate = 115200;
  41              		.loc 1 42 5 is_stmt 1 view .LVU3
  42              		.loc 1 42 26 is_stmt 0 view .LVU4
  43 0008 4FF4E133 		mov	r3, #115200
  44 000c 4360     		str	r3, [r0, #4]
  43:Core/Src/usart.c ****     huart1.Init.WordLength = UART_WORDLENGTH_8B;
  45              		.loc 1 43 5 is_stmt 1 view .LVU5
  46              		.loc 1 43 28 is_stmt 0 view .LVU6
  47 000e 0023     		movs	r3, #0
  48 0010 8360     		str	r3, [r0, #8]
  44:Core/Src/usart.c ****     huart1.Init.StopBits = UART_STOPBITS_1;
  49              		.loc 1 44 5 is_stmt 1 view .LVU7
  50              		.loc 1 44 26 is_stmt 0 view .LVU8
  51 0012 C360     		str	r3, [r0, #12]
  45:Core/Src/usart.c ****     huart1.Init.Parity = UART_PARITY_NONE;
  52              		.loc 1 45 5 is_stmt 1 view .LVU9
  53              		.loc 1 45 24 is_stmt 0 view .LVU10
  54 0014 0361     		str	r3, [r0, #16]
  46:Core/Src/usart.c ****     huart1.Init.Mode = UART_MODE_TX_RX;
  55              		.loc 1 46 5 is_stmt 1 view .LVU11
  56              		.loc 1 46 22 is_stmt 0 view .LVU12
  57 0016 0C22     		movs	r2, #12
  58 0018 4261     		str	r2, [r0, #20]
  47:Core/Src/usart.c ****     huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
  59              		.loc 1 47 5 is_stmt 1 view .LVU13
  60              		.loc 1 47 27 is_stmt 0 view .LVU14
  61 001a 8361     		str	r3, [r0, #24]
  48:Core/Src/usart.c ****     huart1.Init.OverSampling = UART_OVERSAMPLING_16;
  62              		.loc 1 48 5 is_stmt 1 view .LVU15
  63              		.loc 1 48 30 is_stmt 0 view .LVU16
  64 001c C361     		str	r3, [r0, #28]
  49:Core/Src/usart.c ****     if (HAL_UART_Init(&huart1) != HAL_OK)
  65              		.loc 1 49 5 is_stmt 1 view .LVU17
  66              		.loc 1 49 9 is_stmt 0 view .LVU18
ARM GAS  /tmp/ccSLks5w.s 			page 3


  67 001e FFF7FEFF 		bl	HAL_UART_Init
  68              	.LVL0:
  69              		.loc 1 49 8 view .LVU19
  70 0022 00B9     		cbnz	r0, .L4
  71              	.L1:
  50:Core/Src/usart.c ****     {
  51:Core/Src/usart.c ****         Error_Handler();
  52:Core/Src/usart.c ****     }
  53:Core/Src/usart.c ****     /* USER CODE BEGIN USART1_Init 2 */
  54:Core/Src/usart.c **** 
  55:Core/Src/usart.c ****     /* USER CODE END USART1_Init 2 */
  56:Core/Src/usart.c **** }
  72              		.loc 1 56 1 view .LVU20
  73 0024 08BD     		pop	{r3, pc}
  74              	.L4:
  51:Core/Src/usart.c ****     }
  75              		.loc 1 51 9 is_stmt 1 view .LVU21
  76 0026 FFF7FEFF 		bl	Error_Handler
  77              	.LVL1:
  78              		.loc 1 56 1 is_stmt 0 view .LVU22
  79 002a FBE7     		b	.L1
  80              	.L6:
  81              		.align	2
  82              	.L5:
  83 002c 00000000 		.word	.LANCHOR0
  84 0030 00380140 		.word	1073821696
  85              		.cfi_endproc
  86              	.LFE68:
  88              		.section	.text.HAL_UART_MspInit,"ax",%progbits
  89              		.align	1
  90              		.global	HAL_UART_MspInit
  91              		.syntax unified
  92              		.thumb
  93              		.thumb_func
  95              	HAL_UART_MspInit:
  96              	.LVL2:
  97              	.LFB69:
  57:Core/Src/usart.c **** 
  58:Core/Src/usart.c **** void HAL_UART_MspInit(UART_HandleTypeDef *uartHandle)
  59:Core/Src/usart.c **** {
  98              		.loc 1 59 1 is_stmt 1 view -0
  99              		.cfi_startproc
 100              		@ args = 0, pretend = 0, frame = 24
 101              		@ frame_needed = 0, uses_anonymous_args = 0
 102              		.loc 1 59 1 is_stmt 0 view .LVU24
 103 0000 30B5     		push	{r4, r5, lr}
 104              	.LCFI1:
 105              		.cfi_def_cfa_offset 12
 106              		.cfi_offset 4, -12
 107              		.cfi_offset 5, -8
 108              		.cfi_offset 14, -4
 109 0002 87B0     		sub	sp, sp, #28
 110              	.LCFI2:
 111              		.cfi_def_cfa_offset 40
  60:Core/Src/usart.c **** 
  61:Core/Src/usart.c ****     GPIO_InitTypeDef GPIO_InitStruct = {0};
 112              		.loc 1 61 5 is_stmt 1 view .LVU25
ARM GAS  /tmp/ccSLks5w.s 			page 4


 113              		.loc 1 61 22 is_stmt 0 view .LVU26
 114 0004 0023     		movs	r3, #0
 115 0006 0293     		str	r3, [sp, #8]
 116 0008 0393     		str	r3, [sp, #12]
 117 000a 0493     		str	r3, [sp, #16]
 118 000c 0593     		str	r3, [sp, #20]
  62:Core/Src/usart.c ****     if (uartHandle->Instance == USART1)
 119              		.loc 1 62 5 is_stmt 1 view .LVU27
 120              		.loc 1 62 19 is_stmt 0 view .LVU28
 121 000e 0268     		ldr	r2, [r0]
 122              		.loc 1 62 8 view .LVU29
 123 0010 1B4B     		ldr	r3, .L11
 124 0012 9A42     		cmp	r2, r3
 125 0014 01D0     		beq	.L10
 126              	.LVL3:
 127              	.L7:
  63:Core/Src/usart.c ****     {
  64:Core/Src/usart.c ****         /* USER CODE BEGIN USART1_MspInit 0 */
  65:Core/Src/usart.c **** 
  66:Core/Src/usart.c ****         /* USER CODE END USART1_MspInit 0 */
  67:Core/Src/usart.c ****         /* USART1 clock enable */
  68:Core/Src/usart.c ****         __HAL_RCC_USART1_CLK_ENABLE();
  69:Core/Src/usart.c **** 
  70:Core/Src/usart.c ****         __HAL_RCC_GPIOA_CLK_ENABLE();
  71:Core/Src/usart.c ****         /**USART1 GPIO Configuration
  72:Core/Src/usart.c ****         PA9     ------> USART1_TX
  73:Core/Src/usart.c ****         PA10     ------> USART1_RX
  74:Core/Src/usart.c ****         */
  75:Core/Src/usart.c ****         GPIO_InitStruct.Pin = GPIO_PIN_9;
  76:Core/Src/usart.c ****         GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
  77:Core/Src/usart.c ****         GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
  78:Core/Src/usart.c ****         HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
  79:Core/Src/usart.c **** 
  80:Core/Src/usart.c ****         GPIO_InitStruct.Pin = GPIO_PIN_10;
  81:Core/Src/usart.c ****         GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
  82:Core/Src/usart.c ****         GPIO_InitStruct.Pull = GPIO_NOPULL;
  83:Core/Src/usart.c ****         HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
  84:Core/Src/usart.c **** 
  85:Core/Src/usart.c ****         /* USART1 interrupt Init */
  86:Core/Src/usart.c ****         HAL_NVIC_SetPriority(USART1_IRQn, 0, 0);
  87:Core/Src/usart.c ****         HAL_NVIC_EnableIRQ(USART1_IRQn);
  88:Core/Src/usart.c ****         /* USER CODE BEGIN USART1_MspInit 1 */
  89:Core/Src/usart.c **** 
  90:Core/Src/usart.c ****         /* USER CODE END USART1_MspInit 1 */
  91:Core/Src/usart.c ****     }
  92:Core/Src/usart.c **** }
 128              		.loc 1 92 1 view .LVU30
 129 0016 07B0     		add	sp, sp, #28
 130              	.LCFI3:
 131              		.cfi_remember_state
 132              		.cfi_def_cfa_offset 12
 133              		@ sp needed
 134 0018 30BD     		pop	{r4, r5, pc}
 135              	.LVL4:
 136              	.L10:
 137              	.LCFI4:
 138              		.cfi_restore_state
ARM GAS  /tmp/ccSLks5w.s 			page 5


  68:Core/Src/usart.c **** 
 139              		.loc 1 68 9 is_stmt 1 view .LVU31
 140              	.LBB2:
  68:Core/Src/usart.c **** 
 141              		.loc 1 68 9 view .LVU32
  68:Core/Src/usart.c **** 
 142              		.loc 1 68 9 view .LVU33
 143 001a 03F55843 		add	r3, r3, #55296
 144 001e 9A69     		ldr	r2, [r3, #24]
 145 0020 42F48042 		orr	r2, r2, #16384
 146 0024 9A61     		str	r2, [r3, #24]
  68:Core/Src/usart.c **** 
 147              		.loc 1 68 9 view .LVU34
 148 0026 9A69     		ldr	r2, [r3, #24]
 149 0028 02F48042 		and	r2, r2, #16384
 150 002c 0092     		str	r2, [sp]
  68:Core/Src/usart.c **** 
 151              		.loc 1 68 9 view .LVU35
 152 002e 009A     		ldr	r2, [sp]
 153              	.LBE2:
  68:Core/Src/usart.c **** 
 154              		.loc 1 68 9 view .LVU36
  70:Core/Src/usart.c ****         /**USART1 GPIO Configuration
 155              		.loc 1 70 9 view .LVU37
 156              	.LBB3:
  70:Core/Src/usart.c ****         /**USART1 GPIO Configuration
 157              		.loc 1 70 9 view .LVU38
  70:Core/Src/usart.c ****         /**USART1 GPIO Configuration
 158              		.loc 1 70 9 view .LVU39
 159 0030 9A69     		ldr	r2, [r3, #24]
 160 0032 42F00402 		orr	r2, r2, #4
 161 0036 9A61     		str	r2, [r3, #24]
  70:Core/Src/usart.c ****         /**USART1 GPIO Configuration
 162              		.loc 1 70 9 view .LVU40
 163 0038 9B69     		ldr	r3, [r3, #24]
 164 003a 03F00403 		and	r3, r3, #4
 165 003e 0193     		str	r3, [sp, #4]
  70:Core/Src/usart.c ****         /**USART1 GPIO Configuration
 166              		.loc 1 70 9 view .LVU41
 167 0040 019B     		ldr	r3, [sp, #4]
 168              	.LBE3:
  70:Core/Src/usart.c ****         /**USART1 GPIO Configuration
 169              		.loc 1 70 9 view .LVU42
  75:Core/Src/usart.c ****         GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 170              		.loc 1 75 9 view .LVU43
  75:Core/Src/usart.c ****         GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 171              		.loc 1 75 29 is_stmt 0 view .LVU44
 172 0042 4FF40073 		mov	r3, #512
 173 0046 0293     		str	r3, [sp, #8]
  76:Core/Src/usart.c ****         GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 174              		.loc 1 76 9 is_stmt 1 view .LVU45
  76:Core/Src/usart.c ****         GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 175              		.loc 1 76 30 is_stmt 0 view .LVU46
 176 0048 0223     		movs	r3, #2
 177 004a 0393     		str	r3, [sp, #12]
  77:Core/Src/usart.c ****         HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 178              		.loc 1 77 9 is_stmt 1 view .LVU47
ARM GAS  /tmp/ccSLks5w.s 			page 6


  77:Core/Src/usart.c ****         HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 179              		.loc 1 77 31 is_stmt 0 view .LVU48
 180 004c 0323     		movs	r3, #3
 181 004e 0593     		str	r3, [sp, #20]
  78:Core/Src/usart.c **** 
 182              		.loc 1 78 9 is_stmt 1 view .LVU49
 183 0050 0C4D     		ldr	r5, .L11+4
 184 0052 02A9     		add	r1, sp, #8
 185 0054 2846     		mov	r0, r5
 186              	.LVL5:
  78:Core/Src/usart.c **** 
 187              		.loc 1 78 9 is_stmt 0 view .LVU50
 188 0056 FFF7FEFF 		bl	HAL_GPIO_Init
 189              	.LVL6:
  80:Core/Src/usart.c ****         GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 190              		.loc 1 80 9 is_stmt 1 view .LVU51
  80:Core/Src/usart.c ****         GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 191              		.loc 1 80 29 is_stmt 0 view .LVU52
 192 005a 4FF48063 		mov	r3, #1024
 193 005e 0293     		str	r3, [sp, #8]
  81:Core/Src/usart.c ****         GPIO_InitStruct.Pull = GPIO_NOPULL;
 194              		.loc 1 81 9 is_stmt 1 view .LVU53
  81:Core/Src/usart.c ****         GPIO_InitStruct.Pull = GPIO_NOPULL;
 195              		.loc 1 81 30 is_stmt 0 view .LVU54
 196 0060 0024     		movs	r4, #0
 197 0062 0394     		str	r4, [sp, #12]
  82:Core/Src/usart.c ****         HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 198              		.loc 1 82 9 is_stmt 1 view .LVU55
  82:Core/Src/usart.c ****         HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 199              		.loc 1 82 30 is_stmt 0 view .LVU56
 200 0064 0494     		str	r4, [sp, #16]
  83:Core/Src/usart.c **** 
 201              		.loc 1 83 9 is_stmt 1 view .LVU57
 202 0066 02A9     		add	r1, sp, #8
 203 0068 2846     		mov	r0, r5
 204 006a FFF7FEFF 		bl	HAL_GPIO_Init
 205              	.LVL7:
  86:Core/Src/usart.c ****         HAL_NVIC_EnableIRQ(USART1_IRQn);
 206              		.loc 1 86 9 view .LVU58
 207 006e 2246     		mov	r2, r4
 208 0070 2146     		mov	r1, r4
 209 0072 2520     		movs	r0, #37
 210 0074 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 211              	.LVL8:
  87:Core/Src/usart.c ****         /* USER CODE BEGIN USART1_MspInit 1 */
 212              		.loc 1 87 9 view .LVU59
 213 0078 2520     		movs	r0, #37
 214 007a FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 215              	.LVL9:
 216              		.loc 1 92 1 is_stmt 0 view .LVU60
 217 007e CAE7     		b	.L7
 218              	.L12:
 219              		.align	2
 220              	.L11:
 221 0080 00380140 		.word	1073821696
 222 0084 00080140 		.word	1073809408
 223              		.cfi_endproc
ARM GAS  /tmp/ccSLks5w.s 			page 7


 224              	.LFE69:
 226              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 227              		.align	1
 228              		.global	HAL_UART_MspDeInit
 229              		.syntax unified
 230              		.thumb
 231              		.thumb_func
 233              	HAL_UART_MspDeInit:
 234              	.LVL10:
 235              	.LFB70:
  93:Core/Src/usart.c **** 
  94:Core/Src/usart.c **** void HAL_UART_MspDeInit(UART_HandleTypeDef *uartHandle)
  95:Core/Src/usart.c **** {
 236              		.loc 1 95 1 is_stmt 1 view -0
 237              		.cfi_startproc
 238              		@ args = 0, pretend = 0, frame = 0
 239              		@ frame_needed = 0, uses_anonymous_args = 0
 240              		.loc 1 95 1 is_stmt 0 view .LVU62
 241 0000 08B5     		push	{r3, lr}
 242              	.LCFI5:
 243              		.cfi_def_cfa_offset 8
 244              		.cfi_offset 3, -8
 245              		.cfi_offset 14, -4
  96:Core/Src/usart.c **** 
  97:Core/Src/usart.c ****     if (uartHandle->Instance == USART1)
 246              		.loc 1 97 5 is_stmt 1 view .LVU63
 247              		.loc 1 97 19 is_stmt 0 view .LVU64
 248 0002 0268     		ldr	r2, [r0]
 249              		.loc 1 97 8 view .LVU65
 250 0004 084B     		ldr	r3, .L17
 251 0006 9A42     		cmp	r2, r3
 252 0008 00D0     		beq	.L16
 253              	.LVL11:
 254              	.L13:
  98:Core/Src/usart.c ****     {
  99:Core/Src/usart.c ****         /* USER CODE BEGIN USART1_MspDeInit 0 */
 100:Core/Src/usart.c **** 
 101:Core/Src/usart.c ****         /* USER CODE END USART1_MspDeInit 0 */
 102:Core/Src/usart.c ****         /* Peripheral clock disable */
 103:Core/Src/usart.c ****         __HAL_RCC_USART1_CLK_DISABLE();
 104:Core/Src/usart.c **** 
 105:Core/Src/usart.c ****         /**USART1 GPIO Configuration
 106:Core/Src/usart.c ****         PA9     ------> USART1_TX
 107:Core/Src/usart.c ****         PA10     ------> USART1_RX
 108:Core/Src/usart.c ****         */
 109:Core/Src/usart.c ****         HAL_GPIO_DeInit(GPIOA, GPIO_PIN_9 | GPIO_PIN_10);
 110:Core/Src/usart.c **** 
 111:Core/Src/usart.c ****         /* USART1 interrupt Deinit */
 112:Core/Src/usart.c ****         HAL_NVIC_DisableIRQ(USART1_IRQn);
 113:Core/Src/usart.c ****         /* USER CODE BEGIN USART1_MspDeInit 1 */
 114:Core/Src/usart.c **** 
 115:Core/Src/usart.c ****         /* USER CODE END USART1_MspDeInit 1 */
 116:Core/Src/usart.c ****     }
 117:Core/Src/usart.c **** }
 255              		.loc 1 117 1 view .LVU66
 256 000a 08BD     		pop	{r3, pc}
 257              	.LVL12:
ARM GAS  /tmp/ccSLks5w.s 			page 8


 258              	.L16:
 103:Core/Src/usart.c **** 
 259              		.loc 1 103 9 is_stmt 1 view .LVU67
 260 000c 074A     		ldr	r2, .L17+4
 261 000e 9369     		ldr	r3, [r2, #24]
 262 0010 23F48043 		bic	r3, r3, #16384
 263 0014 9361     		str	r3, [r2, #24]
 109:Core/Src/usart.c **** 
 264              		.loc 1 109 9 view .LVU68
 265 0016 4FF4C061 		mov	r1, #1536
 266 001a 0548     		ldr	r0, .L17+8
 267              	.LVL13:
 109:Core/Src/usart.c **** 
 268              		.loc 1 109 9 is_stmt 0 view .LVU69
 269 001c FFF7FEFF 		bl	HAL_GPIO_DeInit
 270              	.LVL14:
 112:Core/Src/usart.c ****         /* USER CODE BEGIN USART1_MspDeInit 1 */
 271              		.loc 1 112 9 is_stmt 1 view .LVU70
 272 0020 2520     		movs	r0, #37
 273 0022 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 274              	.LVL15:
 275              		.loc 1 117 1 is_stmt 0 view .LVU71
 276 0026 F0E7     		b	.L13
 277              	.L18:
 278              		.align	2
 279              	.L17:
 280 0028 00380140 		.word	1073821696
 281 002c 00100240 		.word	1073876992
 282 0030 00080140 		.word	1073809408
 283              		.cfi_endproc
 284              	.LFE70:
 286              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 287              		.align	1
 288              		.global	HAL_UART_RxCpltCallback
 289              		.syntax unified
 290              		.thumb
 291              		.thumb_func
 293              	HAL_UART_RxCpltCallback:
 294              	.LVL16:
 295              	.LFB71:
 118:Core/Src/usart.c **** 
 119:Core/Src/usart.c **** void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
 120:Core/Src/usart.c **** {
 296              		.loc 1 120 1 is_stmt 1 view -0
 297              		.cfi_startproc
 298              		@ args = 0, pretend = 0, frame = 8
 299              		@ frame_needed = 0, uses_anonymous_args = 0
 300              		.loc 1 120 1 is_stmt 0 view .LVU73
 301 0000 00B5     		push	{lr}
 302              	.LCFI6:
 303              		.cfi_def_cfa_offset 4
 304              		.cfi_offset 14, -4
 305 0002 83B0     		sub	sp, sp, #12
 306              	.LCFI7:
 307              		.cfi_def_cfa_offset 16
 121:Core/Src/usart.c ****     uint8_t data = 0;
 308              		.loc 1 121 5 is_stmt 1 view .LVU74
ARM GAS  /tmp/ccSLks5w.s 			page 9


 309              		.loc 1 121 13 is_stmt 0 view .LVU75
 310 0004 0023     		movs	r3, #0
 311 0006 8DF80730 		strb	r3, [sp, #7]
 122:Core/Src/usart.c ****     HAL_UART_Receive_IT(huart, &data, 1);
 312              		.loc 1 122 5 is_stmt 1 view .LVU76
 313 000a 0122     		movs	r2, #1
 314 000c 0DF10701 		add	r1, sp, #7
 315 0010 FFF7FEFF 		bl	HAL_UART_Receive_IT
 316              	.LVL17:
 123:Core/Src/usart.c **** }
 317              		.loc 1 123 1 is_stmt 0 view .LVU77
 318 0014 03B0     		add	sp, sp, #12
 319              	.LCFI8:
 320              		.cfi_def_cfa_offset 4
 321              		@ sp needed
 322 0016 5DF804FB 		ldr	pc, [sp], #4
 323              		.cfi_endproc
 324              	.LFE71:
 326              		.section	.text._write,"ax",%progbits
 327              		.align	1
 328              		.global	_write
 329              		.syntax unified
 330              		.thumb
 331              		.thumb_func
 333              	_write:
 334              	.LVL18:
 335              	.LFB72:
 124:Core/Src/usart.c **** 
 125:Core/Src/usart.c **** int _write(int fd, char *pbuf, int len)
 126:Core/Src/usart.c **** {
 336              		.loc 1 126 1 is_stmt 1 view -0
 337              		.cfi_startproc
 338              		@ args = 0, pretend = 0, frame = 0
 339              		@ frame_needed = 0, uses_anonymous_args = 0
 340              		.loc 1 126 1 is_stmt 0 view .LVU79
 341 0000 70B5     		push	{r4, r5, r6, lr}
 342              	.LCFI9:
 343              		.cfi_def_cfa_offset 16
 344              		.cfi_offset 4, -16
 345              		.cfi_offset 5, -12
 346              		.cfi_offset 6, -8
 347              		.cfi_offset 14, -4
 348 0002 0E46     		mov	r6, r1
 349 0004 1546     		mov	r5, r2
 127:Core/Src/usart.c ****     for (int i = 0; i < len; i++)
 350              		.loc 1 127 5 is_stmt 1 view .LVU80
 351              	.LBB4:
 352              		.loc 1 127 10 view .LVU81
 353              	.LVL19:
 354              		.loc 1 127 14 is_stmt 0 view .LVU82
 355 0006 0024     		movs	r4, #0
 356              		.loc 1 127 5 view .LVU83
 357 0008 0CE0     		b	.L22
 358              	.LVL20:
 359              	.L23:
 128:Core/Src/usart.c ****     {
 129:Core/Src/usart.c ****         while (((HAL_UART_GetState(&huart1)) & HAL_UART_STATE_BUSY_TX) == HAL_UART_STATE_BUSY_TX);
ARM GAS  /tmp/ccSLks5w.s 			page 10


 360              		.loc 1 129 98 is_stmt 1 discriminator 1 view .LVU84
 361              		.loc 1 129 15 discriminator 1 view .LVU85
 362              		.loc 1 129 18 is_stmt 0 discriminator 1 view .LVU86
 363 000a 0848     		ldr	r0, .L25
 364 000c FFF7FEFF 		bl	HAL_UART_GetState
 365              	.LVL21:
 366              		.loc 1 129 15 discriminator 1 view .LVU87
 367 0010 00F02100 		and	r0, r0, #33
 368 0014 2128     		cmp	r0, #33
 369 0016 F8D0     		beq	.L23
 130:Core/Src/usart.c ****         HAL_UART_Transmit_IT(&huart1, (uint8_t *)&(pbuf[i]), 1);
 370              		.loc 1 130 9 is_stmt 1 discriminator 2 view .LVU88
 371 0018 0122     		movs	r2, #1
 372 001a 3119     		adds	r1, r6, r4
 373 001c 0348     		ldr	r0, .L25
 374 001e FFF7FEFF 		bl	HAL_UART_Transmit_IT
 375              	.LVL22:
 127:Core/Src/usart.c ****     for (int i = 0; i < len; i++)
 376              		.loc 1 127 30 discriminator 2 view .LVU89
 127:Core/Src/usart.c ****     for (int i = 0; i < len; i++)
 377              		.loc 1 127 31 is_stmt 0 discriminator 2 view .LVU90
 378 0022 0134     		adds	r4, r4, #1
 379              	.LVL23:
 380              	.L22:
 127:Core/Src/usart.c ****     for (int i = 0; i < len; i++)
 381              		.loc 1 127 21 is_stmt 1 discriminator 1 view .LVU91
 127:Core/Src/usart.c ****     for (int i = 0; i < len; i++)
 382              		.loc 1 127 5 is_stmt 0 discriminator 1 view .LVU92
 383 0024 AC42     		cmp	r4, r5
 384 0026 F0DB     		blt	.L23
 385              	.LBE4:
 131:Core/Src/usart.c ****     }
 132:Core/Src/usart.c **** 
 133:Core/Src/usart.c ****     return len;
 386              		.loc 1 133 5 is_stmt 1 view .LVU93
 134:Core/Src/usart.c **** }...
 387              		.loc 1 134 1 is_stmt 0 view .LVU94
 388 0028 2846     		mov	r0, r5
 389 002a 70BD     		pop	{r4, r5, r6, pc}
 390              	.LVL24:
 391              	.L26:
 392              		.loc 1 134 1 view .LVU95
 393              		.align	2
 394              	.L25:
 395 002c 00000000 		.word	.LANCHOR0
 396              		.cfi_endproc
 397              	.LFE72:
 399              		.global	huart1
 400              		.section	.bss.huart1,"aw",%nobits
 401              		.align	2
 402              		.set	.LANCHOR0,. + 0
 405              	huart1:
 406 0000 00000000 		.space	68
 406      00000000 
 406      00000000 
 406      00000000 
 406      00000000 
ARM GAS  /tmp/ccSLks5w.s 			page 11


 407              		.text
 408              	.Letext0:
 409              		.file 2 "/home/wanghao/gcc-arm-none-eabi/arm-none-eabi/include/machine/_default_types.h"
 410              		.file 3 "/home/wanghao/gcc-arm-none-eabi/arm-none-eabi/include/sys/_stdint.h"
 411              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xe.h"
 412              		.file 5 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 413              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 414              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 415              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 416              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_cortex.h"
 417              		.file 10 "Core/Inc/main.h"
 418              		.file 11 "Core/Inc/usart.h"
ARM GAS  /tmp/ccSLks5w.s 			page 12


DEFINED SYMBOLS
                            *ABS*:0000000000000000 usart.c
     /tmp/ccSLks5w.s:18     .text.MX_USART1_UART_Init:0000000000000000 $t
     /tmp/ccSLks5w.s:24     .text.MX_USART1_UART_Init:0000000000000000 MX_USART1_UART_Init
     /tmp/ccSLks5w.s:83     .text.MX_USART1_UART_Init:000000000000002c $d
     /tmp/ccSLks5w.s:89     .text.HAL_UART_MspInit:0000000000000000 $t
     /tmp/ccSLks5w.s:95     .text.HAL_UART_MspInit:0000000000000000 HAL_UART_MspInit
     /tmp/ccSLks5w.s:221    .text.HAL_UART_MspInit:0000000000000080 $d
     /tmp/ccSLks5w.s:227    .text.HAL_UART_MspDeInit:0000000000000000 $t
     /tmp/ccSLks5w.s:233    .text.HAL_UART_MspDeInit:0000000000000000 HAL_UART_MspDeInit
     /tmp/ccSLks5w.s:280    .text.HAL_UART_MspDeInit:0000000000000028 $d
     /tmp/ccSLks5w.s:287    .text.HAL_UART_RxCpltCallback:0000000000000000 $t
     /tmp/ccSLks5w.s:293    .text.HAL_UART_RxCpltCallback:0000000000000000 HAL_UART_RxCpltCallback
     /tmp/ccSLks5w.s:327    .text._write:0000000000000000 $t
     /tmp/ccSLks5w.s:333    .text._write:0000000000000000 _write
     /tmp/ccSLks5w.s:395    .text._write:000000000000002c $d
     /tmp/ccSLks5w.s:405    .bss.huart1:0000000000000000 huart1
     /tmp/ccSLks5w.s:401    .bss.huart1:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_UART_Init
Error_Handler
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_GPIO_DeInit
HAL_NVIC_DisableIRQ
HAL_UART_Receive_IT
HAL_UART_GetState
HAL_UART_Transmit_IT

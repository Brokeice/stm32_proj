ARM GAS  /tmp/ccEqn9OG.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"tim.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_TIM2_Init,"ax",%progbits
  18              		.align	1
  19              		.global	MX_TIM2_Init
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	MX_TIM2_Init:
  25              	.LFB68:
  26              		.file 1 "Core/Src/tim.c"
   1:Core/Src/tim.c **** /* USER CODE BEGIN Header */
   2:Core/Src/tim.c **** /**
   3:Core/Src/tim.c ****   ******************************************************************************
   4:Core/Src/tim.c ****   * @file    tim.c
   5:Core/Src/tim.c ****   * @brief   This file provides code for the configuration
   6:Core/Src/tim.c ****   *          of the TIM instances.
   7:Core/Src/tim.c ****   ******************************************************************************
   8:Core/Src/tim.c ****   * @attention
   9:Core/Src/tim.c ****   *
  10:Core/Src/tim.c ****   * Copyright (c) 2022 STMicroelectronics.
  11:Core/Src/tim.c ****   * All rights reserved.
  12:Core/Src/tim.c ****   *
  13:Core/Src/tim.c ****   * This software is licensed under terms that can be found in the LICENSE file
  14:Core/Src/tim.c ****   * in the root directory of this software component.
  15:Core/Src/tim.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  16:Core/Src/tim.c ****   *
  17:Core/Src/tim.c ****   ******************************************************************************
  18:Core/Src/tim.c ****   */
  19:Core/Src/tim.c **** /* USER CODE END Header */
  20:Core/Src/tim.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/tim.c **** #include "tim.h"
  22:Core/Src/tim.c **** 
  23:Core/Src/tim.c **** /* USER CODE BEGIN 0 */
  24:Core/Src/tim.c **** 
  25:Core/Src/tim.c **** /* USER CODE END 0 */
  26:Core/Src/tim.c **** 
  27:Core/Src/tim.c **** TIM_HandleTypeDef htim2;
  28:Core/Src/tim.c **** 
  29:Core/Src/tim.c **** /* TIM2 init function */
  30:Core/Src/tim.c **** void MX_TIM2_Init(void)
  31:Core/Src/tim.c **** {
  27              		.loc 1 31 1 view -0
ARM GAS  /tmp/ccEqn9OG.s 			page 2


  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 24
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 00B5     		push	{lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 4
  34              		.cfi_offset 14, -4
  35 0002 87B0     		sub	sp, sp, #28
  36              	.LCFI1:
  37              		.cfi_def_cfa_offset 32
  32:Core/Src/tim.c **** 
  33:Core/Src/tim.c ****   /* USER CODE BEGIN TIM2_Init 0 */
  34:Core/Src/tim.c **** 
  35:Core/Src/tim.c ****   /* USER CODE END TIM2_Init 0 */
  36:Core/Src/tim.c **** 
  37:Core/Src/tim.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
  38              		.loc 1 37 3 view .LVU1
  39              		.loc 1 37 26 is_stmt 0 view .LVU2
  40 0004 0023     		movs	r3, #0
  41 0006 0293     		str	r3, [sp, #8]
  42 0008 0393     		str	r3, [sp, #12]
  43 000a 0493     		str	r3, [sp, #16]
  44 000c 0593     		str	r3, [sp, #20]
  38:Core/Src/tim.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
  45              		.loc 1 38 3 is_stmt 1 view .LVU3
  46              		.loc 1 38 27 is_stmt 0 view .LVU4
  47 000e 0093     		str	r3, [sp]
  48 0010 0193     		str	r3, [sp, #4]
  39:Core/Src/tim.c **** 
  40:Core/Src/tim.c ****   /* USER CODE BEGIN TIM2_Init 1 */
  41:Core/Src/tim.c **** 
  42:Core/Src/tim.c ****   /* USER CODE END TIM2_Init 1 */
  43:Core/Src/tim.c ****   htim2.Instance = TIM2;
  49              		.loc 1 43 3 is_stmt 1 view .LVU5
  50              		.loc 1 43 18 is_stmt 0 view .LVU6
  51 0012 1548     		ldr	r0, .L9
  52 0014 4FF08042 		mov	r2, #1073741824
  53 0018 0260     		str	r2, [r0]
  44:Core/Src/tim.c ****   htim2.Init.Prescaler = 24-1;
  54              		.loc 1 44 3 is_stmt 1 view .LVU7
  55              		.loc 1 44 24 is_stmt 0 view .LVU8
  56 001a 1722     		movs	r2, #23
  57 001c 4260     		str	r2, [r0, #4]
  45:Core/Src/tim.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
  58              		.loc 1 45 3 is_stmt 1 view .LVU9
  59              		.loc 1 45 26 is_stmt 0 view .LVU10
  60 001e 8360     		str	r3, [r0, #8]
  46:Core/Src/tim.c ****   htim2.Init.Period = 1000-1;
  61              		.loc 1 46 3 is_stmt 1 view .LVU11
  62              		.loc 1 46 21 is_stmt 0 view .LVU12
  63 0020 40F2E732 		movw	r2, #999
  64 0024 C260     		str	r2, [r0, #12]
  47:Core/Src/tim.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
  65              		.loc 1 47 3 is_stmt 1 view .LVU13
  66              		.loc 1 47 28 is_stmt 0 view .LVU14
  67 0026 0361     		str	r3, [r0, #16]
  48:Core/Src/tim.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
ARM GAS  /tmp/ccEqn9OG.s 			page 3


  68              		.loc 1 48 3 is_stmt 1 view .LVU15
  69              		.loc 1 48 32 is_stmt 0 view .LVU16
  70 0028 8361     		str	r3, [r0, #24]
  49:Core/Src/tim.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
  71              		.loc 1 49 3 is_stmt 1 view .LVU17
  72              		.loc 1 49 7 is_stmt 0 view .LVU18
  73 002a FFF7FEFF 		bl	HAL_TIM_Base_Init
  74              	.LVL0:
  75              		.loc 1 49 6 view .LVU19
  76 002e 90B9     		cbnz	r0, .L6
  77              	.L2:
  50:Core/Src/tim.c ****   {
  51:Core/Src/tim.c ****     Error_Handler();
  52:Core/Src/tim.c ****   }
  53:Core/Src/tim.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
  78              		.loc 1 53 3 is_stmt 1 view .LVU20
  79              		.loc 1 53 34 is_stmt 0 view .LVU21
  80 0030 4FF48053 		mov	r3, #4096
  81 0034 0293     		str	r3, [sp, #8]
  54:Core/Src/tim.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
  82              		.loc 1 54 3 is_stmt 1 view .LVU22
  83              		.loc 1 54 7 is_stmt 0 view .LVU23
  84 0036 02A9     		add	r1, sp, #8
  85 0038 0B48     		ldr	r0, .L9
  86 003a FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
  87              	.LVL1:
  88              		.loc 1 54 6 view .LVU24
  89 003e 68B9     		cbnz	r0, .L7
  90              	.L3:
  55:Core/Src/tim.c ****   {
  56:Core/Src/tim.c ****     Error_Handler();
  57:Core/Src/tim.c ****   }
  58:Core/Src/tim.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
  91              		.loc 1 58 3 is_stmt 1 view .LVU25
  92              		.loc 1 58 37 is_stmt 0 view .LVU26
  93 0040 0023     		movs	r3, #0
  94 0042 0093     		str	r3, [sp]
  59:Core/Src/tim.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
  95              		.loc 1 59 3 is_stmt 1 view .LVU27
  96              		.loc 1 59 33 is_stmt 0 view .LVU28
  97 0044 0193     		str	r3, [sp, #4]
  60:Core/Src/tim.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
  98              		.loc 1 60 3 is_stmt 1 view .LVU29
  99              		.loc 1 60 7 is_stmt 0 view .LVU30
 100 0046 6946     		mov	r1, sp
 101 0048 0748     		ldr	r0, .L9
 102 004a FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 103              	.LVL2:
 104              		.loc 1 60 6 view .LVU31
 105 004e 40B9     		cbnz	r0, .L8
 106              	.L1:
  61:Core/Src/tim.c ****   {
  62:Core/Src/tim.c ****     Error_Handler();
  63:Core/Src/tim.c ****   }
  64:Core/Src/tim.c ****   /* USER CODE BEGIN TIM2_Init 2 */
  65:Core/Src/tim.c **** 
  66:Core/Src/tim.c ****   /* USER CODE END TIM2_Init 2 */
ARM GAS  /tmp/ccEqn9OG.s 			page 4


  67:Core/Src/tim.c **** 
  68:Core/Src/tim.c **** }
 107              		.loc 1 68 1 view .LVU32
 108 0050 07B0     		add	sp, sp, #28
 109              	.LCFI2:
 110              		.cfi_remember_state
 111              		.cfi_def_cfa_offset 4
 112              		@ sp needed
 113 0052 5DF804FB 		ldr	pc, [sp], #4
 114              	.L6:
 115              	.LCFI3:
 116              		.cfi_restore_state
  51:Core/Src/tim.c ****   }
 117              		.loc 1 51 5 is_stmt 1 view .LVU33
 118 0056 FFF7FEFF 		bl	Error_Handler
 119              	.LVL3:
 120 005a E9E7     		b	.L2
 121              	.L7:
  56:Core/Src/tim.c ****   }
 122              		.loc 1 56 5 view .LVU34
 123 005c FFF7FEFF 		bl	Error_Handler
 124              	.LVL4:
 125 0060 EEE7     		b	.L3
 126              	.L8:
  62:Core/Src/tim.c ****   }
 127              		.loc 1 62 5 view .LVU35
 128 0062 FFF7FEFF 		bl	Error_Handler
 129              	.LVL5:
 130              		.loc 1 68 1 is_stmt 0 view .LVU36
 131 0066 F3E7     		b	.L1
 132              	.L10:
 133              		.align	2
 134              	.L9:
 135 0068 00000000 		.word	.LANCHOR0
 136              		.cfi_endproc
 137              	.LFE68:
 139              		.section	.text.HAL_TIM_Base_MspInit,"ax",%progbits
 140              		.align	1
 141              		.global	HAL_TIM_Base_MspInit
 142              		.syntax unified
 143              		.thumb
 144              		.thumb_func
 146              	HAL_TIM_Base_MspInit:
 147              	.LVL6:
 148              	.LFB69:
  69:Core/Src/tim.c **** 
  70:Core/Src/tim.c **** void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* tim_baseHandle)
  71:Core/Src/tim.c **** {
 149              		.loc 1 71 1 is_stmt 1 view -0
 150              		.cfi_startproc
 151              		@ args = 0, pretend = 0, frame = 8
 152              		@ frame_needed = 0, uses_anonymous_args = 0
  72:Core/Src/tim.c **** 
  73:Core/Src/tim.c ****   if(tim_baseHandle->Instance==TIM2)
 153              		.loc 1 73 3 view .LVU38
 154              		.loc 1 73 20 is_stmt 0 view .LVU39
 155 0000 0368     		ldr	r3, [r0]
ARM GAS  /tmp/ccEqn9OG.s 			page 5


 156              		.loc 1 73 5 view .LVU40
 157 0002 B3F1804F 		cmp	r3, #1073741824
 158 0006 00D0     		beq	.L17
 159 0008 7047     		bx	lr
 160              	.L17:
  71:Core/Src/tim.c **** 
 161              		.loc 1 71 1 view .LVU41
 162 000a 00B5     		push	{lr}
 163              	.LCFI4:
 164              		.cfi_def_cfa_offset 4
 165              		.cfi_offset 14, -4
 166 000c 83B0     		sub	sp, sp, #12
 167              	.LCFI5:
 168              		.cfi_def_cfa_offset 16
  74:Core/Src/tim.c ****   {
  75:Core/Src/tim.c ****   /* USER CODE BEGIN TIM2_MspInit 0 */
  76:Core/Src/tim.c **** 
  77:Core/Src/tim.c ****   /* USER CODE END TIM2_MspInit 0 */
  78:Core/Src/tim.c ****     /* TIM2 clock enable */
  79:Core/Src/tim.c ****     __HAL_RCC_TIM2_CLK_ENABLE();
 169              		.loc 1 79 5 is_stmt 1 view .LVU42
 170              	.LBB2:
 171              		.loc 1 79 5 view .LVU43
 172              		.loc 1 79 5 view .LVU44
 173 000e 03F50433 		add	r3, r3, #135168
 174 0012 DA69     		ldr	r2, [r3, #28]
 175 0014 42F00102 		orr	r2, r2, #1
 176 0018 DA61     		str	r2, [r3, #28]
 177              		.loc 1 79 5 view .LVU45
 178 001a DB69     		ldr	r3, [r3, #28]
 179 001c 03F00103 		and	r3, r3, #1
 180 0020 0193     		str	r3, [sp, #4]
 181              		.loc 1 79 5 view .LVU46
 182 0022 019B     		ldr	r3, [sp, #4]
 183              	.LBE2:
 184              		.loc 1 79 5 view .LVU47
  80:Core/Src/tim.c **** 
  81:Core/Src/tim.c ****     /* TIM2 interrupt Init */
  82:Core/Src/tim.c ****     HAL_NVIC_SetPriority(TIM2_IRQn, 0, 0);
 185              		.loc 1 82 5 view .LVU48
 186 0024 0022     		movs	r2, #0
 187 0026 1146     		mov	r1, r2
 188 0028 1C20     		movs	r0, #28
 189              	.LVL7:
 190              		.loc 1 82 5 is_stmt 0 view .LVU49
 191 002a FFF7FEFF 		bl	HAL_NVIC_SetPriority
 192              	.LVL8:
  83:Core/Src/tim.c ****     HAL_NVIC_EnableIRQ(TIM2_IRQn);
 193              		.loc 1 83 5 is_stmt 1 view .LVU50
 194 002e 1C20     		movs	r0, #28
 195 0030 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 196              	.LVL9:
  84:Core/Src/tim.c ****   /* USER CODE BEGIN TIM2_MspInit 1 */
  85:Core/Src/tim.c **** 
  86:Core/Src/tim.c ****   /* USER CODE END TIM2_MspInit 1 */
  87:Core/Src/tim.c ****   }
  88:Core/Src/tim.c **** }
ARM GAS  /tmp/ccEqn9OG.s 			page 6


 197              		.loc 1 88 1 is_stmt 0 view .LVU51
 198 0034 03B0     		add	sp, sp, #12
 199              	.LCFI6:
 200              		.cfi_def_cfa_offset 4
 201              		@ sp needed
 202 0036 5DF804FB 		ldr	pc, [sp], #4
 203              		.cfi_endproc
 204              	.LFE69:
 206              		.section	.text.HAL_TIM_Base_MspDeInit,"ax",%progbits
 207              		.align	1
 208              		.global	HAL_TIM_Base_MspDeInit
 209              		.syntax unified
 210              		.thumb
 211              		.thumb_func
 213              	HAL_TIM_Base_MspDeInit:
 214              	.LVL10:
 215              	.LFB70:
  89:Core/Src/tim.c **** 
  90:Core/Src/tim.c **** void HAL_TIM_Base_MspDeInit(TIM_HandleTypeDef* tim_baseHandle)
  91:Core/Src/tim.c **** {
 216              		.loc 1 91 1 is_stmt 1 view -0
 217              		.cfi_startproc
 218              		@ args = 0, pretend = 0, frame = 0
 219              		@ frame_needed = 0, uses_anonymous_args = 0
 220              		.loc 1 91 1 is_stmt 0 view .LVU53
 221 0000 08B5     		push	{r3, lr}
 222              	.LCFI7:
 223              		.cfi_def_cfa_offset 8
 224              		.cfi_offset 3, -8
 225              		.cfi_offset 14, -4
  92:Core/Src/tim.c **** 
  93:Core/Src/tim.c ****   if(tim_baseHandle->Instance==TIM2)
 226              		.loc 1 93 3 is_stmt 1 view .LVU54
 227              		.loc 1 93 20 is_stmt 0 view .LVU55
 228 0002 0368     		ldr	r3, [r0]
 229              		.loc 1 93 5 view .LVU56
 230 0004 B3F1804F 		cmp	r3, #1073741824
 231 0008 00D0     		beq	.L21
 232              	.LVL11:
 233              	.L18:
  94:Core/Src/tim.c ****   {
  95:Core/Src/tim.c ****   /* USER CODE BEGIN TIM2_MspDeInit 0 */
  96:Core/Src/tim.c **** 
  97:Core/Src/tim.c ****   /* USER CODE END TIM2_MspDeInit 0 */
  98:Core/Src/tim.c ****     /* Peripheral clock disable */
  99:Core/Src/tim.c ****     __HAL_RCC_TIM2_CLK_DISABLE();
 100:Core/Src/tim.c **** 
 101:Core/Src/tim.c ****     /* TIM2 interrupt Deinit */
 102:Core/Src/tim.c ****     HAL_NVIC_DisableIRQ(TIM2_IRQn);
 103:Core/Src/tim.c ****   /* USER CODE BEGIN TIM2_MspDeInit 1 */
 104:Core/Src/tim.c **** 
 105:Core/Src/tim.c ****   /* USER CODE END TIM2_MspDeInit 1 */
 106:Core/Src/tim.c ****   }
 107:Core/Src/tim.c **** }
 234              		.loc 1 107 1 view .LVU57
 235 000a 08BD     		pop	{r3, pc}
 236              	.LVL12:
ARM GAS  /tmp/ccEqn9OG.s 			page 7


 237              	.L21:
  99:Core/Src/tim.c **** 
 238              		.loc 1 99 5 is_stmt 1 view .LVU58
 239 000c 044A     		ldr	r2, .L22
 240 000e D369     		ldr	r3, [r2, #28]
 241 0010 23F00103 		bic	r3, r3, #1
 242 0014 D361     		str	r3, [r2, #28]
 102:Core/Src/tim.c ****   /* USER CODE BEGIN TIM2_MspDeInit 1 */
 243              		.loc 1 102 5 view .LVU59
 244 0016 1C20     		movs	r0, #28
 245              	.LVL13:
 102:Core/Src/tim.c ****   /* USER CODE BEGIN TIM2_MspDeInit 1 */
 246              		.loc 1 102 5 is_stmt 0 view .LVU60
 247 0018 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 248              	.LVL14:
 249              		.loc 1 107 1 view .LVU61
 250 001c F5E7     		b	.L18
 251              	.L23:
 252 001e 00BF     		.align	2
 253              	.L22:
 254 0020 00100240 		.word	1073876992
 255              		.cfi_endproc
 256              	.LFE70:
 258              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 259              		.align	1
 260              		.global	HAL_TIM_PeriodElapsedCallback
 261              		.syntax unified
 262              		.thumb
 263              		.thumb_func
 265              	HAL_TIM_PeriodElapsedCallback:
 266              	.LVL15:
 267              	.LFB71:
 108:Core/Src/tim.c **** 
 109:Core/Src/tim.c **** /* USER CODE BEGIN 1 */
 110:Core/Src/tim.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 111:Core/Src/tim.c **** {
 268              		.loc 1 111 1 is_stmt 1 view -0
 269              		.cfi_startproc
 270              		@ args = 0, pretend = 0, frame = 0
 271              		@ frame_needed = 0, uses_anonymous_args = 0
 272              		.loc 1 111 1 is_stmt 0 view .LVU63
 273 0000 08B5     		push	{r3, lr}
 274              	.LCFI8:
 275              		.cfi_def_cfa_offset 8
 276              		.cfi_offset 3, -8
 277              		.cfi_offset 14, -4
 112:Core/Src/tim.c ****     static uint32_t cnt = 0;
 278              		.loc 1 112 5 is_stmt 1 view .LVU64
 113:Core/Src/tim.c ****     if (htim->Instance == TIM2)
 279              		.loc 1 113 5 view .LVU65
 280              		.loc 1 113 13 is_stmt 0 view .LVU66
 281 0002 0368     		ldr	r3, [r0]
 282              		.loc 1 113 8 view .LVU67
 283 0004 B3F1804F 		cmp	r3, #1073741824
 284 0008 00D0     		beq	.L28
 285              	.LVL16:
 286              	.L24:
ARM GAS  /tmp/ccEqn9OG.s 			page 8


 114:Core/Src/tim.c ****     {
 115:Core/Src/tim.c ****         if (cnt > 1000)
 116:Core/Src/tim.c ****         {
 117:Core/Src/tim.c ****             led_toggle();
 118:Core/Src/tim.c ****             cnt = 0;
 119:Core/Src/tim.c ****         }
 120:Core/Src/tim.c ****         else
 121:Core/Src/tim.c ****         {
 122:Core/Src/tim.c ****             cnt++;
 123:Core/Src/tim.c ****         }
 124:Core/Src/tim.c ****     }
 125:Core/Src/tim.c **** }
 287              		.loc 1 125 1 view .LVU68
 288 000a 08BD     		pop	{r3, pc}
 289              	.LVL17:
 290              	.L28:
 115:Core/Src/tim.c ****         {
 291              		.loc 1 115 9 is_stmt 1 view .LVU69
 115:Core/Src/tim.c ****         {
 292              		.loc 1 115 17 is_stmt 0 view .LVU70
 293 000c 074B     		ldr	r3, .L30
 294 000e 1B68     		ldr	r3, [r3]
 115:Core/Src/tim.c ****         {
 295              		.loc 1 115 12 view .LVU71
 296 0010 B3F57A7F 		cmp	r3, #1000
 297 0014 03D8     		bhi	.L29
 122:Core/Src/tim.c ****         }
 298              		.loc 1 122 13 is_stmt 1 view .LVU72
 122:Core/Src/tim.c ****         }
 299              		.loc 1 122 16 is_stmt 0 view .LVU73
 300 0016 0133     		adds	r3, r3, #1
 301 0018 044A     		ldr	r2, .L30
 302 001a 1360     		str	r3, [r2]
 303              		.loc 1 125 1 view .LVU74
 304 001c F5E7     		b	.L24
 305              	.L29:
 306              	.LBB3:
 117:Core/Src/tim.c ****             cnt = 0;
 307              		.loc 1 117 13 is_stmt 1 view .LVU75
 308 001e FFF7FEFF 		bl	led_toggle
 309              	.LVL18:
 118:Core/Src/tim.c ****         }
 310              		.loc 1 118 13 view .LVU76
 118:Core/Src/tim.c ****         }
 311              		.loc 1 118 17 is_stmt 0 view .LVU77
 312 0022 024B     		ldr	r3, .L30
 313 0024 0022     		movs	r2, #0
 314 0026 1A60     		str	r2, [r3]
 315              	.LBE3:
 316 0028 EFE7     		b	.L24
 317              	.L31:
 318 002a 00BF     		.align	2
 319              	.L30:
 320 002c 00000000 		.word	.LANCHOR1
 321              		.cfi_endproc
 322              	.LFE71:
 324              		.global	htim2
ARM GAS  /tmp/ccEqn9OG.s 			page 9


 325              		.section	.bss.cnt.0,"aw",%nobits
 326              		.align	2
 327              		.set	.LANCHOR1,. + 0
 330              	cnt.0:
 331 0000 00000000 		.space	4
 332              		.section	.bss.htim2,"aw",%nobits
 333              		.align	2
 334              		.set	.LANCHOR0,. + 0
 337              	htim2:
 338 0000 00000000 		.space	72
 338      00000000 
 338      00000000 
 338      00000000 
 338      00000000 
 339              		.text
 340              	.Letext0:
 341              		.file 2 "/home/wanghao/gcc-arm-none-eabi/arm-none-eabi/include/machine/_default_types.h"
 342              		.file 3 "/home/wanghao/gcc-arm-none-eabi/arm-none-eabi/include/sys/_stdint.h"
 343              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xe.h"
 344              		.file 5 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 345              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 346              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 347              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_cortex.h"
 348              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim_ex.h"
 349              		.file 10 "Core/Inc/main.h"
 350              		.file 11 "Core/Inc/tim.h"
ARM GAS  /tmp/ccEqn9OG.s 			page 10


DEFINED SYMBOLS
                            *ABS*:0000000000000000 tim.c
     /tmp/ccEqn9OG.s:18     .text.MX_TIM2_Init:0000000000000000 $t
     /tmp/ccEqn9OG.s:24     .text.MX_TIM2_Init:0000000000000000 MX_TIM2_Init
     /tmp/ccEqn9OG.s:135    .text.MX_TIM2_Init:0000000000000068 $d
     /tmp/ccEqn9OG.s:140    .text.HAL_TIM_Base_MspInit:0000000000000000 $t
     /tmp/ccEqn9OG.s:146    .text.HAL_TIM_Base_MspInit:0000000000000000 HAL_TIM_Base_MspInit
     /tmp/ccEqn9OG.s:207    .text.HAL_TIM_Base_MspDeInit:0000000000000000 $t
     /tmp/ccEqn9OG.s:213    .text.HAL_TIM_Base_MspDeInit:0000000000000000 HAL_TIM_Base_MspDeInit
     /tmp/ccEqn9OG.s:254    .text.HAL_TIM_Base_MspDeInit:0000000000000020 $d
     /tmp/ccEqn9OG.s:259    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
     /tmp/ccEqn9OG.s:265    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
     /tmp/ccEqn9OG.s:320    .text.HAL_TIM_PeriodElapsedCallback:000000000000002c $d
     /tmp/ccEqn9OG.s:337    .bss.htim2:0000000000000000 htim2
     /tmp/ccEqn9OG.s:326    .bss.cnt.0:0000000000000000 $d
     /tmp/ccEqn9OG.s:330    .bss.cnt.0:0000000000000000 cnt.0
     /tmp/ccEqn9OG.s:333    .bss.htim2:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIMEx_MasterConfigSynchronization
Error_Handler
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_NVIC_DisableIRQ
led_toggle
